[
  {
    "id": "create-exclusive-gateway",
    "label": "Exclusive gateway",
    "group": {
      "id": "gateways",
      "name": "Gateways"
    }
  },
  {
    "id": "create-parallel-gateway",
    "label": "Parallel gateway",
    "group": {
      "id": "gateways",
      "name": "Gateways"
    }
  },
  {
    "id": "create-inclusive-gateway",
    "label": "Inclusive gateway",
    "group": {
      "id": "gateways",
      "name": "Gateways"
    },
    "search": "or",
    "rank": -1
  },
  {
    "id": "create-complex-gateway",
    "label": "Complex gateway",
    "group": {
      "id": "gateways",
      "name": "Gateways"
    },
    "rank": -1
  },
  {
    "id": "create-event-based-gateway",
    "label": "Event-based gateway",
    "group": {
      "id": "gateways",
      "name": "Gateways"
    }
  },
  {
    "id": "create-task",
    "label": "Task",
    "group": {
      "id": "tasks",
      "name": "Tasks"
    }
  },
  {
    "id": "create-user-task",
    "label": "User task",
    "group": {
      "id": "tasks",
      "name": "Tasks"
    },
    "search": "form human"
  },
  {
    "id": "create-service-task",
    "label": "Service task",
    "group": {
      "id": "tasks",
      "name": "Tasks"
    },
    "search": "job worker"
  },
  {
    "id": "create-send-task",
    "label": "Send task",
    "group": {
      "id": "tasks",
      "name": "Tasks"
    },
    "search": "job worker",
    "rank": -1
  },
  {
    "id": "create-receive-task",
    "label": "Receive task",
    "group": {
      "id": "tasks",
      "name": "Tasks"
    },
    "search": "message",
    "rank": -1
  },
  {
    "id": "create-manual-task",
    "label": "Manual task",
    "group": {
      "id": "tasks",
      "name": "Tasks"
    },
    "rank": -1
  },
  {
    "id": "create-rule-task",
    "label": "Business rule task",
    "group": {
      "id": "tasks",
      "name": "Tasks"
    },
    "search": "dmn decision"
  },
  {
    "id": "create-script-task",
    "label": "Script task",
    "group": {
      "id": "tasks",
      "name": "Tasks"
    },
    "search": "job worker"
  },
  {
    "id": "create-call-activity",
    "label": "Call activity",
    "group": {
      "id": "subprocess",
      "name": "Sub-processes"
    },
    "search": "child process"
  },
  {
    "id": "create-transaction",
    "label": "Transaction",
    "group": {
      "id": "subprocess",
      "name": "Sub-processes"
    }
  },
  {
    "id": "create-event-subprocess",
    "label": "Event sub-process",
    "group": {
      "id": "subprocess",
      "name": "Sub-processes"
    },
    "search": "subprocess"
  },
  {
    "id": "create-collapsed-subprocess",
    "label": "Sub-process (collapsed)",
    "group": {
      "id": "subprocess",
      "name": "Sub-processes"
    },
    "search": "subprocess"
  },
  {
    "id": "create-expanded-subprocess",
    "label": "Sub-process (expanded)",
    "group": {
      "id": "subprocess",
      "name": "Sub-processes"
    },
    "search": "subprocess"
  },
  {
    "id": "create-collapsed-ad-hoc-subprocess",
    "label": "Ad-hoc sub-process (collapsed)",
    "group": {
      "id": "subprocess",
      "name": "Sub-processes"
    },
    "search": "adhoc subprocess"
  },
  {
    "id": "create-expanded-ad-hoc-subprocess",
    "label": "Ad-hoc sub-process (expanded)",
    "group": {
      "id": "subprocess",
      "name": "Sub-processes"
    },
    "search": "adhoc subprocess"
  },
  {
    "id": "create-none-start-event",
    "label": "Start event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-none-intermediate-throwing",
    "label": "Intermediate throw event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-none-boundary-event",
    "label": "Boundary event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-none-end-event",
    "label": "End event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-message-start",
    "label": "Message start event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-timer-start",
    "label": "Timer start event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-conditional-start",
    "label": "Conditional start event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-signal-start",
    "label": "Signal start event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-message-intermediate-catch",
    "label": "Message intermediate catch event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-message-intermediate-throw",
    "label": "Message intermediate throw event",
    "group": {
      "id": "events",
      "name": "Events"
    },
    "search": "job worker"
  },
  {
    "id": "create-timer-intermediate-catch",
    "label": "Timer intermediate catch event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-escalation-intermediate-throw",
    "label": "Escalation intermediate throw event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-conditional-intermediate-catch",
    "label": "Conditional intermediate catch event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-link-intermediate-catch",
    "label": "Link intermediate catch event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-link-intermediate-throw",
    "label": "Link intermediate throw event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-compensation-intermediate-throw",
    "label": "Compensation intermediate throw event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-signal-intermediate-catch",
    "label": "Signal intermediate catch event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-signal-intermediate-throw",
    "label": "Signal intermediate throw event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-message-end",
    "label": "Message end event",
    "group": {
      "id": "events",
      "name": "Events"
    },
    "search": "job worker"
  },
  {
    "id": "create-escalation-end",
    "label": "Escalation end event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-error-end",
    "label": "Error end event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-cancel-end",
    "label": "Cancel end event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-compensation-end",
    "label": "Compensation end event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-signal-end",
    "label": "Signal end event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-terminate-end",
    "label": "Terminate end event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-message-boundary",
    "label": "Message boundary event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-timer-boundary",
    "label": "Timer boundary event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-escalation-boundary",
    "label": "Escalation boundary event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-conditional-boundary",
    "label": "Conditional boundary event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-error-boundary",
    "label": "Error boundary event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-cancel-boundary",
    "label": "Cancel boundary event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-signal-boundary",
    "label": "Signal boundary event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-compensation-boundary",
    "label": "Compensation boundary event",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-non-interrupting-message-boundary",
    "label": "Message boundary event (non-interrupting)",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-non-interrupting-timer-boundary",
    "label": "Timer boundary event (non-interrupting)",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-non-interrupting-escalation-boundary",
    "label": "Escalation boundary event (non-interrupting)",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-non-interrupting-conditional-boundary",
    "label": "Conditional boundary event (non-interrupting)",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-non-interrupting-signal-boundary",
    "label": "Signal boundary event (non-interrupting)",
    "group": {
      "id": "events",
      "name": "Events"
    }
  },
  {
    "id": "create-data-store-reference",
    "label": "Data store reference",
    "group": {
      "id": "data",
      "name": "Data"
    }
  },
  {
    "id": "create-data-object-reference",
    "label": "Data object reference",
    "group": {
      "id": "data",
      "name": "Data"
    }
  },
  {
    "id": "create-expanded-pool",
    "label": "Expanded pool/participant",
    "group": {
      "id": "participants",
      "name": "Participants"
    },
    "search": "Non-empty pool/participant"
  },
  {
    "id": "create-collapsed-pool",
    "label": "Empty pool/participant",
    "group": {
      "id": "participants",
      "name": "Participants"
    },
    "search": "Collapsed pool/participant"
  },
  {
    "id": "create.template-io.camunda.connectors.AWSLAMBDA.v2",
    "label": "AWS Lambda Outbound Connector",
    "description": "Invoke a function",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.GraphQL.v1",
    "label": "GraphQL Outbound Connector",
    "description": "Execute GraphQL query",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": []
  },
  {
    "id": "create.template-io.camunda.connectors.AWSDynamoDB.v1",
    "label": "AWS DynamoDB Outbound Connector",
    "description": "Manage tables and items with AWS DynamoDB.",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "create table",
      "delete table",
      "update table",
      "describe table",
      "scan table",
      "add item",
      "delete item",
      "get item",
      "update item"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.AWSSQS.startmessage.v1",
    "label": "Amazon SQS Message Start Event Connector",
    "description": "Receive messages from Amazon SQS.",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "receive message",
      "receive event",
      "receive message from queue",
      "receive event from queue"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.AWSSQS.intermediate.v1",
    "label": "Amazon SQS Intermediate Message Catch Event connector",
    "description": "Receive messages from Amazon SQS.",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "receive message",
      "receive event",
      "receive message from queue",
      "receive event from queue"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.AWSSQS.v1",
    "label": "Amazon SQS Outbound Connector",
    "description": "Send messages to Amazon SQS.",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "send message",
      "publish message",
      "send message to queue",
      "publish message to queue"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.AWSSQS.boundary.v1",
    "label": "Amazon SQS Boundary Event Connector",
    "description": "Receive messages from Amazon SQS.",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "receive message",
      "receive event",
      "receive message from queue",
      "receive event from queue"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.GoogleDrive.v1",
    "label": "Google Drive Outbound Connector",
    "description": "Manage Google Drive files and folders",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "create file",
      "create file from template",
      "create folder"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.RabbitMQ.v1",
    "label": "RabbitMQ Outbound Connector",
    "description": "Send message to RabbitMQ",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": []
  },
  {
    "id": "create.template-io.camunda.connectors.inbound.RabbitMQ.Intermediate.v1",
    "label": "RabbitMQ Intermediate Catch Event Connector",
    "description": "Receive a message from RabbitMQ",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": []
  },
  {
    "id": "create.template-io.camunda.connectors.inbound.RabbitMQ.MessageStart.v1",
    "label": "RabbitMQ Message Start Event Connector",
    "description": "Receive a message from RabbitMQ",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": []
  },
  {
    "id": "create.template-io.camunda.connectors.inbound.RabbitMQ.Boundary.v1",
    "label": "RabbitMQ Boundary Event Connector",
    "description": "Receive a message from RabbitMQ",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": []
  },
  {
    "id": "create.template-io.camunda.connectors.SendGrid.v2",
    "label": "SendGrid Outbound Connector",
    "description": "Send an email via SendGrid",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": []
  },
  {
    "id": "create.template-io.camunda.connectors.Slack.v1",
    "label": "Slack Outbound Connector",
    "description": "Create a channel or send a message to a channel or user",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": []
  },
  {
    "id": "create.template-io.camunda.connectors.inbound.Slack.IntermediateCatchEvent.v1",
    "label": "Slack Webhook Intermediate Catch Event Connector",
    "description": "Receive events from Slack",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": []
  },
  {
    "id": "create.template-io.camunda.connectors.inbound.Slack.MessageStartEvent.v1",
    "label": "Slack Webhook Message Start Event Connector",
    "description": "Receive events from Slack",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": []
  },
  {
    "id": "create.template-io.camunda.connectors.inbound.Slack.BoundaryEvent.v1",
    "label": "Slack Webhook Boundary Event Connector",
    "description": "Receive events from Slack",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": []
  },
  {
    "id": "create.template-io.camunda.connectors.webhook.GithubWebhookConnector.v1",
    "label": "GitHub Webhook Start Event Connector",
    "description": "Receive events from GitHub",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "issue created",
      "issue updated",
      "issue deleted",
      "pull request created",
      "pull request updated",
      "pull request deleted",
      "repository created",
      "repository updated",
      "repository deleted"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.webhook.GithubWebhookConnectorIntermediate.v1",
    "label": "GitHub Webhook Intermediate Catch Event Connector",
    "description": "Receive events from GitHub",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "issue created",
      "issue updated",
      "issue deleted",
      "pull request created",
      "pull request updated",
      "pull request deleted",
      "repository created",
      "repository updated",
      "repository deleted"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.GitHub.v1",
    "label": "GitHub Outbound Connector",
    "description": "Manage GitHub issues, branches, releases, and more",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "create issue",
      "get issue",
      "update issue",
      "create issue comment",
      "search issues",
      "list commits",
      "create release",
      "update release",
      "delete release",
      "list releases",
      "list branches",
      "get branch",
      "merge branch",
      "list organization repositories",
      "create organization repository",
      "get repository",
      "update repository",
      "delete repository",
      "list repository contributors",
      "create organization invitation",
      "get repository content",
      "list code scanning alerts for a repository",
      "list code scanning alerts for an organization",
      "create a workflow dispatch event",
      "create a reference",
      "create a pull request",
      "list repository collaborators"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.GitLab.v1",
    "label": "GitLab Outbound Connector",
    "description": "Manage GitLab issues, branches, releases, and more",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "create issue",
      "delete issue",
      "comment to issue",
      "search issues",
      "get issue by ID",
      "get releases by project ID",
      "get release by tag name",
      "create release",
      "list repository branches",
      "create repository branch",
      "create repository file",
      "get repository file",
      "update repository file",
      "create merge request"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.GoogleMapsPlatform.v1",
    "label": "Google Maps Platform Outbound Connector",
    "description": "Validate addresses, retrieve postal addresses and calculate distances with Googe Maps",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "find address",
      "check address",
      "get distance"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.WhatsApp.v1",
    "label": "WhatsApp Business Outbound Connector",
    "description": "Send messages via WhatsApp",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.Salesforce.v1",
    "label": "Salesforce Outbound Connector",
    "description": "Call the Salesforce APIs from your process",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.AWSEventBridge.v1",
    "label": "Amazon EventBridge Outbound Connector",
    "description": "Send events to AWS EventBridge",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "emit event",
      "publish event",
      "send event",
      "trigger event"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.AWSEventBridge.MessageStart.v1",
    "label": "Amazon EventBridge Message Start Event Connector",
    "description": "Receive events from AWS EventBridge",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.AWSEventBridge.intermediate.v1",
    "label": "Amazon EventBridge Intermediate Catch Event Connector",
    "description": "Receive events from AWS EventBridge",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.AWSEventBridge.boundary.v1",
    "label": "Amazon EventBridge Boundary Event Connector",
    "description": "Receive events from AWS EventBridge",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.HuggingFace.v1",
    "label": "Hugging Face Outbound Connector",
    "description": "Interact with Hugging Face inference API",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.AzureOpenAI.outbound.v1",
    "label": "Azure OpenAI Connector",
    "description": "Interact with Azure OpenAI from your BPMN process",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "open ai"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.aws.s3.v1",
    "label": "AWS S3 Outbound Connector",
    "description": "Execute S3 requests",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": []
  },
  {
    "id": "create.template-io.camunda.connectors.AWSTEXTRACT.v1",
    "label": "AWS Textract Outbound Connector",
    "description": "Extract text and data using AWS Textract.",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "extract text",
      "extract data",
      "extract text from image",
      "extract data from image",
      "ocr"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.HttpJson.v2",
    "label": "REST Outbound Connector",
    "description": "Invoke REST API",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": []
  },
  {
    "id": "create.template-io.camunda.connectors.Asana.v1",
    "label": "Asana Outbound Connector",
    "description": "Create, update, and manage tasks and projects in Asana.",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "get task or project by ID",
      "get tasks from project",
      "create project in workspace"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.AWSSNS.v1",
    "label": "Amazon SNS Outbound connector",
    "description": "Send messages to Amazon SNS.",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "send message",
      "publish message"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.inbound.AWSSNS.IntermediateCatchEvent.v1",
    "label": "SNS HTTPS Intermediate Catch Event Connector",
    "description": "Receive messages from AWS SNS via HTTPS.",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "receive event",
      "receive message"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.inbound.AWSSNS.MessageStartEvent.v1",
    "label": "SNS HTTPS Message Start Event Connector Subscription",
    "description": "Receive messages from AWS SNS via HTTPS.",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "receive event",
      "receive message"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.inbound.AWSSNS.Boundary.v1",
    "label": "SNS HTTPS Boundary Event Connector",
    "description": "Receive messages from AWS SNS via HTTPS.",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "receive event",
      "receive message"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.GoogleSheets.v1",
    "label": "Google Sheets Outbound Connector",
    "description": "Manage spreadsheets with Google Sheets",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "create spreadsheet",
      "add values to spreadsheet",
      "create row",
      "create column",
      "create worksheet",
      "delete worksheet",
      "get row",
      "get spreadsheet details",
      "get worksheet data"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.inbound.KafkaMessageStart.v1",
    "label": "Kafka Message Start Event Connector",
    "description": "Consume Kafka messages",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": []
  },
  {
    "id": "create.template-io.camunda.connectors.inbound.KafkaIntermediate.v1",
    "label": "Kafka Intermediate Catch Event Connector",
    "description": "Consume Kafka messages",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": []
  },
  {
    "id": "create.template-io.camunda.connectors.KAFKA.v1",
    "label": "Kafka Outbound Connector",
    "description": "Produce Kafka message",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": []
  },
  {
    "id": "create.template-io.camunda.connectors.inbound.KafkaBoundary.v1",
    "label": "Kafka Boundary Event Connector",
    "description": "Consume Kafka messages",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": []
  },
  {
    "id": "create.template-io.camunda.connectors.MSTeams.v1",
    "label": "Microsoft Teams Outbound Connector",
    "description": "Create, update, and send a message to your Microsoft Teams",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": []
  },
  {
    "id": "create.template-io.camunda.connectors.EasyPost.v1",
    "label": "Easy Post Outbound Connector",
    "description": "Manage addresses, parcels, and shipments with Easy Post.",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "create address",
      "create parcel",
      "create shipment",
      "buy shipment",
      "verify address",
      "retrieve tracker by ID"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.webhook.WebhookConnector.v1",
    "label": "Webhook Start Event Connector",
    "description": "Configure webhook to receive callbacks",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.webhook.WebhookConnectorStartMessage.v1",
    "label": "Webhook Message Start Event Connector",
    "description": "Configure webhook to receive callbacks",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.webhook.WebhookConnectorIntermediate.v1",
    "label": "Webhook Intermediate Event Connector",
    "description": "Configure webhook to receive callbacks",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.webhook.WebhookConnectorBoundary.v1",
    "label": "Webhook Boundary Event Connector",
    "description": "Configure webhook to receive callbacks",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.CamundaOperate.v1",
    "label": "Camunda Operate Outbound connector",
    "description": "Fetch data from Camunda Operate API",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.Twilio.Webhook.Intermediate.v1",
    "label": "Twilio Intermediate Catch Event Connector",
    "description": "Receive incoming message with Twilio service",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.TwilioWebhookMessageStart.v1",
    "label": "Twilio Message Start Event Connector",
    "description": "Receive incoming message with Twilio service",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.Twilio.v1",
    "label": "Twilio Outbound Connector",
    "description": "Send SMS messages or retrieve message information using the Twilio API",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.Twilio.Webhook.Boundary.v1",
    "label": "Twilio Boundary Event Connector",
    "description": "Receive incoming message with Twilio service",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.BluePrism.v1",
    "label": "Blue Prism Outbound Connector",
    "description": "Manage Blue Prism work queues and items.",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "get item from queue by ID",
      "create work queue item",
      "work queue"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.http.Polling",
    "label": "HTTP Polling Intermediate Catch Event Connector",
    "description": "Polls endpoint at regular intervals",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.http.Polling.Boundary",
    "label": "HTTP Polling Boundary Catch Event Connector",
    "description": "Polls endpoint at regular intervals",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.MSFT.O365.Mail.v1",
    "label": "Microsoft Office 365 Mail Connector",
    "description": "Work with Office 365 Mail via your BPMN process",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.AWSSAGEMAKER.v1",
    "label": "AWS SageMaker Outbound Connector",
    "description": "Run inferences using AWS SageMaker.",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "run inference",
      "perform asynchronous inference",
      "perform real-time inference"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.Jdbc.v1",
    "label": "SQL Database Connector",
    "description": "Read and write data from a Camunda process directly to a SQL database (e.g., Microsoft SQL Server, MySQL, PostgreSQL)",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "relational",
      "database"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.aws.bedrock.v1",
    "label": "AWS Bedrock Outbound Connector",
    "description": "Invoke models and converse using AWS Bedrock.",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "invoke model",
      "run inference",
      "invokemodel API",
      "converse API"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.email.v1",
    "label": "Email Connector",
    "description": "Execute email requests",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "send emails",
      "list emails",
      "search emails",
      "delete emails",
      "read emails",
      "move emails"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.inbound.EmailMessageStart.v1",
    "label": "Email Message Start Event Connector",
    "description": "Consume emails",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "email received"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.inbound.EmailBoundary.v1",
    "label": "Email Boundary Event Connector",
    "description": "Consume emails",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "email received"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.inbound.EmailIntermediate.v1",
    "label": "Email Intermediate Catch Event Connector",
    "description": "Consume emails",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": [
      "email received"
    ]
  },
  {
    "id": "create.template-io.camunda.connectors.box",
    "label": "Box Outbound Connector",
    "description": "Interact with the Box Document API",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    },
    "search": []
  },
  {
    "id": "create.template-io.camunda.connectors.OpenAI.v1",
    "label": "OpenAI Outbound Connector",
    "description": "Interact with ChatGPT or moderation API",
    "search": [
      "open ai"
    ],
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.AutomationAnywhere",
    "label": "Automation Anywhere Outbound Connector",
    "description": "Orchestrate your Automation Anywhere bots with Camunda. You can create new queue items and get the result from it",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.connectors.UIPath.v1",
    "label": "UiPath Outbound Connector",
    "description": "Orchestrate your UiPath bots with Camunda. You can create new queue items and get the result from it",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-camunda.connectors.rpa",
    "label": "RPA Connector",
    "description": "Connects with the Camunda RPA Worker",
    "group": {
      "id": "connectors",
      "name": "Connectors"
    }
  },
  {
    "id": "create.template-io.camunda.examples.EmailConnector",
    "label": "Email Connector",
    "description": "A Email sending task.",
    "group": {
      "id": "templates",
      "name": "Templates"
    }
  },
  {
    "id": "create.template-io.camunda.examples.RestConnector",
    "label": "REST Connector",
    "description": "A REST API invocation task.",
    "group": {
      "id": "templates",
      "name": "Templates"
    }
  },
  {
    "id": "create.template-io.camunda.examples.ConditionalRestConnector",
    "label": "(Conditional) REST Connector",
    "description": "A REST API invocation task.",
    "group": {
      "id": "templates",
      "name": "Templates"
    }
  },
  {
    "id": "create.template-io.camunda.examples.Groups",
    "label": "Groups",
    "description": "Example template to provide groups.",
    "group": {
      "id": "templates",
      "name": "Templates"
    }
  },
  {
    "id": "create.template-io.camunda.examples.Feel",
    "label": "FEEL",
    "description": "Example template to provide FEEL inputs.",
    "group": {
      "id": "templates",
      "name": "Templates"
    }
  },
  {
    "id": "create.template-io.camunda.examples.ScriptWorker",
    "label": "Script Worker",
    "description": "A script task worker",
    "group": {
      "id": "templates",
      "name": "Templates"
    }
  },
  {
    "id": "create.template-io.camunda.examples.PaymentTask",
    "label": "Payment task",
    "description": "A payment task worker",
    "group": {
      "id": "templates",
      "name": "Templates"
    }
  },
  {
    "id": "create.template-io.camunda.examples.KafkaTask",
    "label": "Kafka worker",
    "description": "A kafka task worker",
    "group": {
      "id": "templates",
      "name": "Templates"
    }
  },
  {
    "id": "create.template-io.camunda.examples.WithIcon",
    "label": "With Icon",
    "description": "An example element template with custom icon.",
    "group": {
      "id": "templates",
      "name": "Templates"
    }
  },
  {
    "id": "create.template-io.camunda.examples.ElementType",
    "label": "Element Type",
    "description": "An example element template that changes the element type.",
    "group": {
      "id": "templates",
      "name": "Templates"
    }
  },
  {
    "id": "create.template-io.camunda.examples.DocumentationRef",
    "label": "Documentation URL",
    "description": "An example element template with documentation URL.",
    "group": {
      "id": "templates",
      "name": "Templates"
    }
  },
  {
    "id": "create.template-io.camunda.examples.compatibility",
    "label": "Compatibility test",
    "description": "This version is compatible with Camunda 8.5 and above.",
    "group": {
      "id": "templates",
      "name": "Templates"
    }
  },
  {
    "id": "create.template-io.camunda.examples.numberAndBoolean",
    "label": "Number and Boolean fields",
    "description": "A task using Number and Boolean fields",
    "group": {
      "id": "templates",
      "name": "Templates"
    }
  }
]
